name: Test and Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "airflow-ai-bridge/pyproject.toml"

    - name: Install dependencies
      run: |
        cd airflow-ai-bridge
        uv pip install --system -e ".[dev]"

    - name: Run type checking with mypy
      run: |
        cd airflow-ai-bridge
        mypy src --config-file mypy.ini

    - name: Run linting with ruff
      run: |
        cd airflow-ai-bridge
        ruff check src tests examples

    - name: Run code formatting check with black
      run: |
        cd airflow-ai-bridge
        black --check src tests examples

    - name: Run tests with pytest
      run: |
        cd airflow-ai-bridge
        pytest tests/ -v --cov=src/airflow_ai_bridge --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./airflow-ai-bridge/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system bandit[toml] safety

    - name: Run security scan with bandit
      run: |
        cd airflow-ai-bridge
        bandit -r src/ -f json -o bandit-report.json || true
        # Run bandit but don't fail build on low-severity issues
        bandit -r src/ --severity-level medium || true

    - name: Check dependencies for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        safety check

  package:
    name: Package Build Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install build tools
      run: |
        uv pip install --system build twine

    - name: Build package
      run: |
        cd airflow-ai-bridge
        python -m build

    - name: Check package
      run: |
        cd airflow-ai-bridge
        twine check dist/*

    - name: Test install from wheel
      run: |
        cd airflow-ai-bridge
        uv pip install --system dist/*.whl
        python -c "import airflow_ai_bridge; print(f'Successfully imported airflow-ai-bridge v{airflow_ai_bridge.__version__}')"